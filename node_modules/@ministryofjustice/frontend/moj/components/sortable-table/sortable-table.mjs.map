{"version":3,"file":"sortable-table.mjs","sources":["../../../../src/moj/components/sortable-table/sortable-table.mjs"],"sourcesContent":["import $ from 'jquery'\n\nexport function SortableTable(params) {\n  this.table = $(params.table)\n\n  if (this.table.data('moj-search-toggle-initialised')) {\n    return\n  }\n\n  this.table.data('moj-search-toggle-initialised', true)\n  this.caption = this.table.find('caption')\n\n  this.upArrow = `<svg width=\"22\" height=\"22\" focusable=\"false\" aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M6.5625 15.5L11 6.63125L15.4375 15.5H6.5625Z\" fill=\"currentColor\"/>\n</svg>`\n  this.downArrow = `<svg width=\"22\" height=\"22\" focusable=\"false\" aria-hidden=\"true\" role=\"img\" vviewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M15.4375 7L11 15.8687L6.5625 7L15.4375 7Z\" fill=\"currentColor\"/>\n</svg>`\n  this.upDownArrow = `<svg width=\"22\" height=\"22\" focusable=\"false\" aria-hidden=\"true\" role=\"img\" vviewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M8.1875 9.5L10.9609 3.95703L13.7344 9.5H8.1875Z\" fill=\"currentColor\"/>\n<path d=\"M13.7344 12.0781L10.9609 17.6211L8.1875 12.0781H13.7344Z\" fill=\"currentColor\"/>\n</svg>`\n\n  this.setupOptions(params)\n  this.body = this.table.find('tbody')\n  this.createHeadingButtons()\n  this.updateCaption()\n  this.updateDirectionIndicators()\n  this.createStatusBox()\n  this.initialiseSortedColumn()\n  this.table.on('click', 'th button', $.proxy(this, 'onSortButtonClick'))\n}\n\nSortableTable.prototype.setupOptions = function (params) {\n  params = params || {}\n  this.statusMessage = params.statusMessage || 'Sort by %heading% (%direction%)'\n  this.ascendingText = params.ascendingText || 'ascending'\n  this.descendingText = params.descendingText || 'descending'\n}\n\nSortableTable.prototype.createHeadingButtons = function () {\n  const headings = this.table.find('thead th')\n  let heading\n  for (let i = 0; i < headings.length; i++) {\n    heading = $(headings[i])\n    if (heading.attr('aria-sort')) {\n      this.createHeadingButton(heading, i)\n    }\n  }\n}\n\nSortableTable.prototype.createHeadingButton = function (heading, i) {\n  const text = heading.text()\n  const button = $(`<button type=\"button\" data-index=\"${i}\">${text}</button>`)\n  heading.text('')\n  heading.append(button)\n}\n\nSortableTable.prototype.createStatusBox = function () {\n  this.status = $(\n    '<div aria-live=\"polite\" role=\"status\" aria-atomic=\"true\" class=\"govuk-visually-hidden\" />'\n  )\n  this.table.parent().append(this.status)\n}\n\nSortableTable.prototype.initialiseSortedColumn = function () {\n  const rows = this.getTableRowsArray()\n\n  this.table\n    .find('th')\n    .filter('[aria-sort=\"ascending\"], [aria-sort=\"descending\"]')\n    .first()\n    .each((index, el) => {\n      const sortDirection = $(el).attr('aria-sort')\n      const columnNumber = $(el).find('button').attr('data-index')\n      const sortedRows = this.sort(rows, columnNumber, sortDirection)\n      this.addRows(sortedRows)\n    })\n}\n\nSortableTable.prototype.onSortButtonClick = function (e) {\n  const button = e.target.closest('button')\n  const columnNumber = button.getAttribute('data-index')\n  const sortDirection = $(button).parent().attr('aria-sort')\n  let newSortDirection\n  if (sortDirection === 'none' || sortDirection === 'descending') {\n    newSortDirection = 'ascending'\n  } else {\n    newSortDirection = 'descending'\n  }\n  const rows = this.getTableRowsArray()\n  const sortedRows = this.sort(rows, columnNumber, newSortDirection)\n  this.addRows(sortedRows)\n  this.removeButtonStates()\n  this.updateButtonState($(e.currentTarget), newSortDirection)\n  this.updateDirectionIndicators()\n}\n\nSortableTable.prototype.updateCaption = function () {\n  const captionElement = this.caption.get(0)\n\n  if (!captionElement) {\n    return\n  }\n\n  let assistiveText = captionElement.querySelector('.govuk-visually-hidden')\n  if (assistiveText) {\n    return\n  }\n\n  assistiveText = document.createElement('span')\n  assistiveText.classList.add('govuk-visually-hidden')\n  assistiveText.textContent = 'â€ˆ(column headers with buttons are sortable).'\n\n  captionElement.appendChild(assistiveText)\n}\n\nSortableTable.prototype.updateButtonState = function (button, direction) {\n  button.parent().attr('aria-sort', direction)\n  let message = this.statusMessage\n  message = message.replace(/%heading%/, button.text())\n  message = message.replace(/%direction%/, this[`${direction}Text`])\n  this.status.text(message)\n}\n\nSortableTable.prototype.updateDirectionIndicators = function () {\n  const component = this\n  this.table.find('th').each(function () {\n    const heading = $(this)\n    const button = heading.find('button')\n    const direction = heading.attr('aria-sort')\n    button.find('svg').remove()\n    switch (direction) {\n      case 'ascending':\n        button.append(component.upArrow)\n        break\n      case 'descending':\n        button.append(component.downArrow)\n        break\n      case 'none':\n        button.append(component.upDownArrow)\n    }\n  })\n}\n\nSortableTable.prototype.removeButtonStates = function () {\n  this.table.find('thead th').attr('aria-sort', 'none')\n}\n\nSortableTable.prototype.addRows = function (rows) {\n  for (let i = 0; i < rows.length; i++) {\n    this.body.append(rows[i])\n  }\n}\n\nSortableTable.prototype.getTableRowsArray = function () {\n  const rows = []\n  const trs = this.body.find('tr')\n  for (let i = 0; i < trs.length; i++) {\n    rows.push(trs[i])\n  }\n  return rows\n}\n\nSortableTable.prototype.sort = function (rows, columnNumber, sortDirection) {\n  const newRows = rows.sort(\n    function (rowA, rowB) {\n      const tdA = $(rowA).find('td,th').eq(columnNumber)\n      const tdB = $(rowB).find('td,th').eq(columnNumber)\n\n      const valueA =\n        sortDirection === 'ascending'\n          ? this.getCellValue(tdA)\n          : this.getCellValue(tdB)\n      const valueB =\n        sortDirection === 'ascending'\n          ? this.getCellValue(tdB)\n          : this.getCellValue(tdA)\n\n      if (typeof valueA === 'string' || typeof valueB === 'string')\n        return valueA.toString().localeCompare(valueB.toString())\n      return valueA - valueB\n    }.bind(this)\n  )\n  return newRows\n}\n\nSortableTable.prototype.getCellValue = function (cell) {\n  const val = cell.attr('data-sort-value') || cell.html()\n\n  const valAsNumber = Number(val)\n  return isNaN(valAsNumber) ? val : valAsNumber\n}\n"],"names":[],"mappings":"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"}