{"version":3,"file":"alert.mjs","sources":["../../../../src/moj/components/alert/alert.mjs"],"sourcesContent":["import {\n  findNearestMatchingElement,\n  getPreviousSibling,\n  setFocus\n} from '../../helpers.mjs'\n\n/**\n * @typedef {object} AlertConfig\n * @property {boolean} [dismissible=false] - Can the alert be dismissed by the user\n * @property {string} [dismissText=Dismiss] - the label text for the dismiss button\n * @property {boolean} [disableAutoFocus=false] - whether the alert will be autofocused\n * @property {string} [focusOnDismissSelector] - CSS Selector for element to be focused on dismiss\n */\n\n/**\n * @param {HTMLElement} $module - the Alert element\n * @param {AlertConfig} config - configuration options\n * @class\n */\nexport function Alert($module, config = {}) {\n  if (!$module) {\n    return this\n  }\n\n  const schema = Object.freeze({\n    properties: {\n      dismissible: { type: 'boolean' },\n      dismissText: { type: 'string' },\n      disableAutoFocus: { type: 'boolean' },\n      focusOnDismissSelector: { type: 'string' }\n    }\n  })\n\n  const defaults = {\n    dismissible: false,\n    dismissText: 'Dismiss',\n    disableAutoFocus: false\n  }\n\n  // data attributes override JS config, which overrides defaults\n  this.config = this.mergeConfigs(\n    defaults,\n    config,\n    this.parseDataset(schema, $module.dataset)\n  )\n\n  this.$module = $module\n}\n\nAlert.prototype.init = function () {\n  /**\n   * Focus the alert\n   *\n   * If `role=\"alert\"` is set, focus the element to help some assistive\n   * technologies prioritise announcing it.\n   *\n   * You can turn off the auto-focus functionality by setting\n   * `data-disable-auto-focus=\"true\"` in the component HTML. You might wish to\n   * do this based on user research findings, or to avoid a clash with another\n   * element which should be focused when the page loads.\n   */\n  if (\n    this.$module.getAttribute('role') === 'alert' &&\n    !this.config.disableAutoFocus\n  ) {\n    setFocus(this.$module)\n  }\n\n  this.$dismissButton = this.$module.querySelector('.moj-alert__dismiss')\n\n  if (this.config.dismissible && this.$dismissButton) {\n    this.$dismissButton.innerHTML = this.config.dismissText\n    this.$dismissButton.removeAttribute('hidden')\n\n    this.$module.addEventListener('click', (event) => {\n      if (this.$dismissButton.contains(event.target)) {\n        this.dimiss()\n      }\n    })\n  }\n}\n\n/**\n * Handle dismissing the alert\n */\nAlert.prototype.dimiss = function () {\n  let $elementToRecieveFocus\n\n  // If a selector has been provided, attempt to find that element\n  if (this.config.focusOnDismissSelector) {\n    $elementToRecieveFocus = document.querySelector(\n      this.config.focusOnDismissSelector\n    )\n  }\n\n  // Is the next sibling another alert\n  if (!$elementToRecieveFocus) {\n    const $nextSibling = this.$module.nextElementSibling\n    if ($nextSibling && $nextSibling.matches('.moj-alert')) {\n      $elementToRecieveFocus = $nextSibling\n    }\n  }\n\n  // Else try to find any preceding sibling alert or heading\n  if (!$elementToRecieveFocus) {\n    $elementToRecieveFocus = getPreviousSibling(\n      this.$module,\n      '.moj-alert, h1, h2, h3, h4, h5, h6'\n    )\n  }\n\n  // Else find the closest ancestor heading, or fallback to main, or last resort\n  // use the body element\n  if (!$elementToRecieveFocus) {\n    $elementToRecieveFocus = findNearestMatchingElement(\n      this.$module,\n      'h1, h2, h3, h4, h5, h6, main, body'\n    )\n  }\n\n  // If we have an element, place focus on it\n  if ($elementToRecieveFocus) {\n    setFocus($elementToRecieveFocus)\n  }\n\n  // Remove the alert\n  this.$module.remove()\n}\n\n/**\n * Normalise string\n *\n * 'If it looks like a duck, and it quacks like a duckâ€¦' ðŸ¦†\n *\n * If the passed value looks like a boolean or a number, convert it to a boolean\n * or number.\n *\n * Designed to be used to convert config passed via data attributes (which are\n * always strings) into something sensible.\n *\n * @internal\n * @param {DOMStringMap[string]} value - The value to normalise\n * @param {SchemaProperty} [property] - Component schema property\n * @returns {string | boolean | number | undefined} Normalised data\n */\nAlert.prototype.normaliseString = function (value, property) {\n  const trimmedValue = value ? value.trim() : ''\n\n  let output\n  let outputType\n  if (property && property.type) {\n    outputType = property.type\n  }\n\n  // No schema type set? Determine automatically\n  if (!outputType) {\n    if (['true', 'false'].includes(trimmedValue)) {\n      outputType = 'boolean'\n    }\n\n    // Empty / whitespace-only strings are considered finite so we need to check\n    // the length of the trimmed string as well\n    if (trimmedValue.length > 0 && isFinite(Number(trimmedValue))) {\n      outputType = 'number'\n    }\n  }\n\n  switch (outputType) {\n    case 'boolean':\n      output = trimmedValue === 'true'\n      break\n\n    case 'number':\n      output = Number(trimmedValue)\n      break\n\n    default:\n      output = value\n  }\n\n  return output\n}\n\n/**\n * Parse dataset\n *\n * Loop over an object and normalise each value using {@link normaliseString},\n * optionally expanding nested `i18n.field`\n *\n * @param {Schema} schema - component schema\n * @param {DOMStringMap} dataset - HTML element dataset\n * @returns {object} Normalised dataset\n */\nAlert.prototype.parseDataset = function (schema, dataset) {\n  const parsed = {}\n\n  for (const [field, property] of Object.entries(schema.properties)) {\n    if (field in dataset) {\n      if (dataset[field]) {\n        parsed[field] = this.normaliseString(dataset[field], property)\n      }\n    }\n  }\n\n  return parsed\n}\n\n/**\n * Config merging function\n *\n * Takes any number of objects and combines them together, with\n * greatest priority on the LAST item passed in.\n *\n * @param {...{ [key: string]: unknown }} configObjects - Config objects to merge\n * @returns {{ [key: string]: unknown }} A merged config object\n */\nAlert.prototype.mergeConfigs = function (...configObjects) {\n  const formattedConfigObject = {}\n\n  // Loop through each of the passed objects\n  for (const configObject of configObjects) {\n    for (const key of Object.keys(configObject)) {\n      const option = formattedConfigObject[key]\n      const override = configObject[key]\n\n      // Push their keys one-by-one into formattedConfigObject. Any duplicate\n      // keys with object values will be merged, otherwise the new value will\n      // override the existing value.\n      if (typeof option === 'object' && typeof override === 'object') {\n        // @ts-expect-error Index signature for type 'string' is missing\n        formattedConfigObject[key] = this.mergeConfigs(option, override)\n      } else {\n        formattedConfigObject[key] = override\n      }\n    }\n  }\n\n  return formattedConfigObject\n}\n\n/**\n * Schema for component config\n *\n * @typedef {object} Schema\n * @property {{ [field: string]: SchemaProperty | undefined }} properties - Schema properties\n */\n\n/**\n * Schema property for component config\n *\n * @typedef {object} SchemaProperty\n * @property {'string' | 'boolean' | 'number' | 'object'} type - Property type\n */\n"],"names":[],"mappings":";;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS,KAAK,CAAC,OAAO,EAAE,MAAM,GAAG,EAAE,EAAE;AAC5C,EAAE,IAAI,CAAC,OAAO,EAAE;AAChB,IAAI,OAAO;AACX;;AAEA,EAAE,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC/B,IAAI,UAAU,EAAE;AAChB,MAAM,WAAW,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;AACtC,MAAM,WAAW,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;AACrC,MAAM,gBAAgB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;AAC3C,MAAM,sBAAsB,EAAE,EAAE,IAAI,EAAE,QAAQ;AAC9C;AACA,GAAG;;AAEH,EAAE,MAAM,QAAQ,GAAG;AACnB,IAAI,WAAW,EAAE,KAAK;AACtB,IAAI,WAAW,EAAE,SAAS;AAC1B,IAAI,gBAAgB,EAAE;AACtB;;AAEA;AACA,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY;AACjC,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,OAAO;AAC7C;;AAEA,EAAE,IAAI,CAAC,OAAO,GAAG;AACjB;;AAEA,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,OAAO;AACjD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;AACjB,IAAI;AACJ,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO;AACzB;;AAEA,EAAE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,qBAAqB;;AAExE,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,IAAI,CAAC,cAAc,EAAE;AACtD,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;AAChD,IAAI,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,QAAQ;;AAEhD,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAK,KAAK;AACtD,MAAM,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;AACtD,QAAQ,IAAI,CAAC,MAAM;AACnB;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;AACrC,EAAE,IAAI;;AAEN;AACA,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE;AAC1C,IAAI,sBAAsB,GAAG,QAAQ,CAAC,aAAa;AACnD,MAAM,IAAI,CAAC,MAAM,CAAC;AAClB;AACA;;AAEA;AACA,EAAE,IAAI,CAAC,sBAAsB,EAAE;AAC/B,IAAI,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC;AACtC,IAAI,IAAI,YAAY,IAAI,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;AAC5D,MAAM,sBAAsB,GAAG;AAC/B;AACA;;AAEA;AACA,EAAE,IAAI,CAAC,sBAAsB,EAAE;AAC/B,IAAI,sBAAsB,GAAG,kBAAkB;AAC/C,MAAM,IAAI,CAAC,OAAO;AAClB,MAAM;AACN;AACA;;AAEA;AACA;AACA,EAAE,IAAI,CAAC,sBAAsB,EAAE;AAC/B,IAAI,sBAAsB,GAAG,0BAA0B;AACvD,MAAM,IAAI,CAAC,OAAO;AAClB,MAAM;AACN;AACA;;AAEA;AACA,EAAE,IAAI,sBAAsB,EAAE;AAC9B,IAAI,QAAQ,CAAC,sBAAsB;AACnC;;AAEA;AACA,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,KAAK,EAAE,QAAQ,EAAE;AAC7D,EAAE,MAAM,YAAY,GAAG,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,GAAG;;AAE9C,EAAE,IAAI;AACN,EAAE,IAAI;AACN,EAAE,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE;AACjC,IAAI,UAAU,GAAG,QAAQ,CAAC;AAC1B;;AAEA;AACA,EAAE,IAAI,CAAC,UAAU,EAAE;AACnB,IAAI,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;AAClD,MAAM,UAAU,GAAG;AACnB;;AAEA;AACA;AACA,IAAI,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;AACnE,MAAM,UAAU,GAAG;AACnB;AACA;;AAEA,EAAE,QAAQ,UAAU;AACpB,IAAI,KAAK,SAAS;AAClB,MAAM,MAAM,GAAG,YAAY,KAAK;AAChC,MAAM;;AAEN,IAAI,KAAK,QAAQ;AACjB,MAAM,MAAM,GAAG,MAAM,CAAC,YAAY;AAClC,MAAM;;AAEN,IAAI;AACJ,MAAM,MAAM,GAAG;AACf;;AAEA,EAAE,OAAO;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,MAAM,EAAE,OAAO,EAAE;AAC1D,EAAE,MAAM,MAAM,GAAG;;AAEjB,EAAE,KAAK,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;AACrE,IAAI,IAAI,KAAK,IAAI,OAAO,EAAE;AAC1B,MAAM,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;AAC1B,QAAQ,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,QAAQ;AACrE;AACA;AACA;;AAEA,EAAE,OAAO;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,GAAG,aAAa,EAAE;AAC3D,EAAE,MAAM,qBAAqB,GAAG;;AAEhC;AACA,EAAE,KAAK,MAAM,YAAY,IAAI,aAAa,EAAE;AAC5C,IAAI,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;AACjD,MAAM,MAAM,MAAM,GAAG,qBAAqB,CAAC,GAAG;AAC9C,MAAM,MAAM,QAAQ,GAAG,YAAY,CAAC,GAAG;;AAEvC;AACA;AACA;AACA,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;AACtE;AACA,QAAQ,qBAAqB,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ;AACvE,OAAO,MAAM;AACb,QAAQ,qBAAqB,CAAC,GAAG,CAAC,GAAG;AACrC;AACA;AACA;;AAEA,EAAE,OAAO;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;"}