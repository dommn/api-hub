{"version":3,"file":"alert.js","sources":["../../../../src/moj/helpers.mjs","../../../../src/moj/components/alert/alert.mjs"],"sourcesContent":["export function removeAttributeValue(el, attr, value) {\n  let re, m\n  if (el.getAttribute(attr)) {\n    if (el.getAttribute(attr) === value) {\n      el.removeAttribute(attr)\n    } else {\n      re = new RegExp(`(^|\\\\s)${value}(\\\\s|$)`)\n      m = el.getAttribute(attr).match(re)\n      if (m && m.length === 3) {\n        el.setAttribute(\n          attr,\n          el.getAttribute(attr).replace(re, m[1] && m[2] ? ' ' : '')\n        )\n      }\n    }\n  }\n}\n\nexport function addAttributeValue(el, attr, value) {\n  let re\n  if (!el.getAttribute(attr)) {\n    el.setAttribute(attr, value)\n  } else {\n    re = new RegExp(`(^|\\\\s)${value}(\\\\s|$)`)\n    if (!re.test(el.getAttribute(attr))) {\n      el.setAttribute(attr, `${el.getAttribute(attr)} ${value}`)\n    }\n  }\n}\n\nexport function dragAndDropSupported() {\n  const div = document.createElement('div')\n  return typeof div.ondrop !== 'undefined'\n}\n\nexport function formDataSupported() {\n  return typeof FormData === 'function'\n}\n\nexport function fileApiSupported() {\n  const input = document.createElement('input')\n  input.type = 'file'\n  return typeof input.files !== 'undefined'\n}\n\nexport function nodeListForEach(nodes, callback) {\n  if (window.NodeList.prototype.forEach) {\n    return nodes.forEach(callback)\n  }\n  for (let i = 0; i < nodes.length; i++) {\n    callback.call(window, nodes[i], i, nodes)\n  }\n}\n\n/**\n * Find an elements next sibling\n *\n * Utility function to find an elements next sibling matching the provided\n * selector.\n *\n * @param {HTMLElement} $element - Element to find siblings for\n * @param {string} selector - selector for required sibling\n */\nexport function getNextSibling($element, selector) {\n  if (!$element) return\n  // Get the next sibling element\n  let $sibling = $element.nextElementSibling\n\n  // If there's no selector, return the first sibling\n  if (!selector) return $sibling\n\n  // If the sibling matches our selector, use it\n  // If not, jump to the next sibling and continue the loop\n  while ($sibling) {\n    if ($sibling.matches(selector)) return $sibling\n    $sibling = $sibling.nextElementSibling\n  }\n}\n\n/**\n * Find an elements preceding sibling\n *\n * Utility function to find an elements previous sibling matching the provided\n * selector.\n *\n * @param {HTMLElement} $element - Element to find siblings for\n * @param {string} selector - selector for required sibling\n */\nexport function getPreviousSibling($element, selector) {\n  if (!$element) return\n  // Get the previous sibling element\n  let $sibling = $element.previousElementSibling\n\n  // If there's no selector, return the first sibling\n  if (!selector) return $sibling\n\n  // If the sibling matches our selector, use it\n  // If not, jump to the next sibling and continue the loop\n  while ($sibling) {\n    if ($sibling.matches(selector)) return $sibling\n    $sibling = $sibling.previousElementSibling\n  }\n}\n\nexport function findNearestMatchingElement($element, selector) {\n  // If no element or selector is provided, return null\n  if (!$element) return\n  if (!selector) return\n\n  // Start with the current element\n  let $currentElement = $element\n\n  while ($currentElement) {\n    // First check the current element\n    if ($currentElement.matches(selector)) {\n      return $currentElement\n    }\n\n    // Check all previous siblings\n    let $sibling = $currentElement.previousElementSibling\n    while ($sibling) {\n      // Check if the sibling itself is a heading\n      if ($sibling.matches(selector)) {\n        return $sibling\n      }\n      $sibling = $sibling.previousElementSibling\n    }\n\n    // If no match found in siblings, move up to parent\n    $currentElement = $currentElement.parentElement\n  }\n}\n\n/**\n * Move focus to element\n *\n * Sets tabindex to -1 to make the element programmatically focusable,\n * but removes it on blur as the element doesn't need to be focused again.\n *\n * @param {HTMLElement} $element - HTML element\n * @param {object} [options] - Handler options\n * @param {function(this: HTMLElement): void} [options.onBeforeFocus] - Callback before focus\n * @param {function(this: HTMLElement): void} [options.onBlur] - Callback on blur\n */\nexport function setFocus($element, options = {}) {\n  const isFocusable = $element.getAttribute('tabindex')\n\n  if (!isFocusable) {\n    $element.setAttribute('tabindex', '-1')\n  }\n\n  /**\n   * Handle element focus\n   */\n  function onFocus() {\n    $element.addEventListener('blur', onBlur, { once: true })\n  }\n\n  /**\n   * Handle element blur\n   */\n  function onBlur() {\n    if (options.onBlur) {\n      options.onBlur.call($element)\n    }\n\n    if (!isFocusable) {\n      $element.removeAttribute('tabindex')\n    }\n  }\n\n  // Add listener to reset element on blur, after focus\n  $element.addEventListener('focus', onFocus, { once: true })\n\n  // Focus element\n  if (options.onBeforeFocus) {\n    options.onBeforeFocus.call($element)\n  }\n  $element.focus()\n}\n","import {\n  findNearestMatchingElement,\n  getPreviousSibling,\n  setFocus\n} from '../../helpers.mjs'\n\n/**\n * @typedef {object} AlertConfig\n * @property {boolean} [dismissible=false] - Can the alert be dismissed by the user\n * @property {string} [dismissText=Dismiss] - the label text for the dismiss button\n * @property {boolean} [disableAutoFocus=false] - whether the alert will be autofocused\n * @property {string} [focusOnDismissSelector] - CSS Selector for element to be focused on dismiss\n */\n\n/**\n * @param {HTMLElement} $module - the Alert element\n * @param {AlertConfig} config - configuration options\n * @class\n */\nexport function Alert($module, config = {}) {\n  if (!$module) {\n    return this\n  }\n\n  const schema = Object.freeze({\n    properties: {\n      dismissible: { type: 'boolean' },\n      dismissText: { type: 'string' },\n      disableAutoFocus: { type: 'boolean' },\n      focusOnDismissSelector: { type: 'string' }\n    }\n  })\n\n  const defaults = {\n    dismissible: false,\n    dismissText: 'Dismiss',\n    disableAutoFocus: false\n  }\n\n  // data attributes override JS config, which overrides defaults\n  this.config = this.mergeConfigs(\n    defaults,\n    config,\n    this.parseDataset(schema, $module.dataset)\n  )\n\n  this.$module = $module\n}\n\nAlert.prototype.init = function () {\n  /**\n   * Focus the alert\n   *\n   * If `role=\"alert\"` is set, focus the element to help some assistive\n   * technologies prioritise announcing it.\n   *\n   * You can turn off the auto-focus functionality by setting\n   * `data-disable-auto-focus=\"true\"` in the component HTML. You might wish to\n   * do this based on user research findings, or to avoid a clash with another\n   * element which should be focused when the page loads.\n   */\n  if (\n    this.$module.getAttribute('role') === 'alert' &&\n    !this.config.disableAutoFocus\n  ) {\n    setFocus(this.$module)\n  }\n\n  this.$dismissButton = this.$module.querySelector('.moj-alert__dismiss')\n\n  if (this.config.dismissible && this.$dismissButton) {\n    this.$dismissButton.innerHTML = this.config.dismissText\n    this.$dismissButton.removeAttribute('hidden')\n\n    this.$module.addEventListener('click', (event) => {\n      if (this.$dismissButton.contains(event.target)) {\n        this.dimiss()\n      }\n    })\n  }\n}\n\n/**\n * Handle dismissing the alert\n */\nAlert.prototype.dimiss = function () {\n  let $elementToRecieveFocus\n\n  // If a selector has been provided, attempt to find that element\n  if (this.config.focusOnDismissSelector) {\n    $elementToRecieveFocus = document.querySelector(\n      this.config.focusOnDismissSelector\n    )\n  }\n\n  // Is the next sibling another alert\n  if (!$elementToRecieveFocus) {\n    const $nextSibling = this.$module.nextElementSibling\n    if ($nextSibling && $nextSibling.matches('.moj-alert')) {\n      $elementToRecieveFocus = $nextSibling\n    }\n  }\n\n  // Else try to find any preceding sibling alert or heading\n  if (!$elementToRecieveFocus) {\n    $elementToRecieveFocus = getPreviousSibling(\n      this.$module,\n      '.moj-alert, h1, h2, h3, h4, h5, h6'\n    )\n  }\n\n  // Else find the closest ancestor heading, or fallback to main, or last resort\n  // use the body element\n  if (!$elementToRecieveFocus) {\n    $elementToRecieveFocus = findNearestMatchingElement(\n      this.$module,\n      'h1, h2, h3, h4, h5, h6, main, body'\n    )\n  }\n\n  // If we have an element, place focus on it\n  if ($elementToRecieveFocus) {\n    setFocus($elementToRecieveFocus)\n  }\n\n  // Remove the alert\n  this.$module.remove()\n}\n\n/**\n * Normalise string\n *\n * 'If it looks like a duck, and it quacks like a duckâ€¦' ðŸ¦†\n *\n * If the passed value looks like a boolean or a number, convert it to a boolean\n * or number.\n *\n * Designed to be used to convert config passed via data attributes (which are\n * always strings) into something sensible.\n *\n * @internal\n * @param {DOMStringMap[string]} value - The value to normalise\n * @param {SchemaProperty} [property] - Component schema property\n * @returns {string | boolean | number | undefined} Normalised data\n */\nAlert.prototype.normaliseString = function (value, property) {\n  const trimmedValue = value ? value.trim() : ''\n\n  let output\n  let outputType\n  if (property && property.type) {\n    outputType = property.type\n  }\n\n  // No schema type set? Determine automatically\n  if (!outputType) {\n    if (['true', 'false'].includes(trimmedValue)) {\n      outputType = 'boolean'\n    }\n\n    // Empty / whitespace-only strings are considered finite so we need to check\n    // the length of the trimmed string as well\n    if (trimmedValue.length > 0 && isFinite(Number(trimmedValue))) {\n      outputType = 'number'\n    }\n  }\n\n  switch (outputType) {\n    case 'boolean':\n      output = trimmedValue === 'true'\n      break\n\n    case 'number':\n      output = Number(trimmedValue)\n      break\n\n    default:\n      output = value\n  }\n\n  return output\n}\n\n/**\n * Parse dataset\n *\n * Loop over an object and normalise each value using {@link normaliseString},\n * optionally expanding nested `i18n.field`\n *\n * @param {Schema} schema - component schema\n * @param {DOMStringMap} dataset - HTML element dataset\n * @returns {object} Normalised dataset\n */\nAlert.prototype.parseDataset = function (schema, dataset) {\n  const parsed = {}\n\n  for (const [field, property] of Object.entries(schema.properties)) {\n    if (field in dataset) {\n      if (dataset[field]) {\n        parsed[field] = this.normaliseString(dataset[field], property)\n      }\n    }\n  }\n\n  return parsed\n}\n\n/**\n * Config merging function\n *\n * Takes any number of objects and combines them together, with\n * greatest priority on the LAST item passed in.\n *\n * @param {...{ [key: string]: unknown }} configObjects - Config objects to merge\n * @returns {{ [key: string]: unknown }} A merged config object\n */\nAlert.prototype.mergeConfigs = function (...configObjects) {\n  const formattedConfigObject = {}\n\n  // Loop through each of the passed objects\n  for (const configObject of configObjects) {\n    for (const key of Object.keys(configObject)) {\n      const option = formattedConfigObject[key]\n      const override = configObject[key]\n\n      // Push their keys one-by-one into formattedConfigObject. Any duplicate\n      // keys with object values will be merged, otherwise the new value will\n      // override the existing value.\n      if (typeof option === 'object' && typeof override === 'object') {\n        // @ts-expect-error Index signature for type 'string' is missing\n        formattedConfigObject[key] = this.mergeConfigs(option, override)\n      } else {\n        formattedConfigObject[key] = override\n      }\n    }\n  }\n\n  return formattedConfigObject\n}\n\n/**\n * Schema for component config\n *\n * @typedef {object} Schema\n * @property {{ [field: string]: SchemaProperty | undefined }} properties - Schema properties\n */\n\n/**\n * Schema property for component config\n *\n * @typedef {object} SchemaProperty\n * @property {'string' | 'boolean' | 'number' | 'object'} type - Property type\n */\n"],"names":[],"mappings":"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"}